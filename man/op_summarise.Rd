% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/op_summarise.R
\name{op_summarise}
\alias{op_summarise}
\title{Summarise OpenPose Time-Series Data}
\usage{
op_summarise(
  data,
  grouping_vars = NULL,
  cols = NULL,
  names_to = "keypoint",
  values_to = "value",
  metrics = c("count", "na_count", "valid_count", "mean", "median", "sd", "variance",
    "iqr", "min", "max", "skewness", "kurtosis", "dominant_period"),
  plot = FALSE,
  dominant_period_min_points = 10L,
  dominant_period_args = NULL
)
}
\arguments{
\item{data}{A data frame or tibble in wide format.}

\item{grouping_vars}{A character vector of column names in \code{data} that
identify unique groups for summarisation (e.g., \code{c("person", "region")}).
If \code{NULL} (default), the function will attempt to use "person" and/or "region"
if they exist in \code{data} and have more than one unique level. Otherwise,
no grouping is applied beyond the pivoted \code{names_to} column.}

\item{cols}{A character vector of column names to pivot from wide to long format.
If \code{NULL} (default), all numeric columns not in \code{grouping_vars}
(once determined) are pivoted.}

\item{names_to}{A character string specifying the name of the new column storing
the names of pivoted columns. Default is \code{"keypoint"}.}

\item{values_to}{A character string specifying the name of the new column storing
the numeric values from pivoted columns. Default is \code{"value"}.}

\item{metrics}{A character vector specifying which metrics to calculate.
Available options: \code{"count"}, \code{"na_count"}, \code{"valid_count"},
\code{"mean"}, \code{"median"}, \code{"sd"}, \code{"variance"}, \code{"iqr"},
\code{"min"}, \code{"max"}, \code{"skewness"}, \code{"kurtosis"},
\code{"dominant_period"}. Default calculates all metrics.}

\item{plot}{Logical indicating whether to generate summary plots of the
calculated statistics. Default is \code{FALSE}.}

\item{dominant_period_min_points}{Integer specifying minimum number of non-NA,
non-constant data points required for dominant period calculation. Default is 10L.}

\item{dominant_period_args}{List of additional arguments passed to
\code{\link[stats]{spectrum}} for periodicity calculation. Default is \code{NULL}.}
}
\value{
A tibble with summary statistics. Each row corresponds to a unique
combination of determined \code{grouping_vars} and values from \code{names_to}.
Columns include grouping variables and requested metrics.
}
\description{
This function takes time-series data (e.g., from OpenPose) in wide format,
reshapes it into long format, and calculates summary statistics for specified
metrics. It handles grouping, descriptive statistics, moments (skewness,
kurtosis), and dominant period estimation. When plot=TRUE, it generates
plots of the calculated summary statistics.
}
\details{
The function performs the following steps:
\enumerate{
\item Validates input parameters.
\item Determines grouping variables if not explicitly provided (checks for "person", "region").
\item Identifies numeric columns to pivot, excluding non-numeric columns with a warning.
\item Reshapes data from wide to long format using \code{\link[tidyr]{pivot_longer}}.
\item Calculates requested summary statistics grouped by specified variables.
\item Optionally generates visualization plots of the summary statistics.
}

For dominant period calculation, the function uses \code{\link[stats]{spectrum}}
to find the peak in the power spectrum density. Skewness and kurtosis require
the \pkg{moments} package.
}
\examples{
# Create sample data with a non-numeric column
sample_data <- data.frame(
  frame = 1:100,
  participant = rep(c("P1", "P2"), each = 50),
  region = rep(c("A", "B"), times = 50),
  notes = "some_metadata", # This non-numeric column will be ignored
  Nose_x = rnorm(100),
  Nose_y = rnorm(100),
  LEye_x = rnorm(100),
  LEye_y = rnorm(100)
)

# The function will now automatically ignore the 'notes' column and warn the user.
result_robust <- op_summarise(
   data = sample_data,
   grouping_vars = c("participant", "region"),
   metrics = c("mean", "sd"),
   plot = TRUE
)
print(result_robust)

}
